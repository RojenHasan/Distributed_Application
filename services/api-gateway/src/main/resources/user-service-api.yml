openapi: 3.0.3
info:
  title: User Service v1
  description: |-
    API for User Service
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
paths:
  /api/v1/users:
    get:
      tags:
        - User
      summary: Get all users
      description: Get a list of all users
      operationId: GetAllUsers
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiUser'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    post:
      tags:
        - User
      description: Create a new User
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiUser'
      responses:
        '201':
          description: User successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /api/v1/user/{userId}:
    get:
      tags:
        - User
      summary: Get a User by userId
      description: Get a User by userId
      operationId: Get User by userId
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUser'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
components:
  schemas:
    AddUserRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        isClient:
          type: boolean
    ApiUser:
      properties:
        userId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        isClient:
          type: boolean
    UserCreatedEvent:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/ApiUser'
    ApiUsers:
      type: array
      items:
        $ref: '#/components/schemas/ApiUser'
    ApiError:
      type: object
      properties:
        code:
          type: string
          description: 'Functional code specifying the error'
          example: '2300'
        message:
          type: string
          description: 'Brief explanation about the error'
    ValidateUserCommand:
      type: object
      properties:
        reservationId:
          type: integer
        userId:
          type: integer
    UserValidatedEvent:
      type: object
      properties:
        reservationId:
          type: integer
        userId:
          type: integer
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        isClient:
          type: boolean

    CheckUserIsClientCommand:
      type: object
      properties:
        reservationId:
          type: integer
        carType:
          type: string