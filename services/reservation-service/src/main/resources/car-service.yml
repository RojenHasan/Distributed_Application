openapi: 3.0.3
info:
  title: Car Service v1
  description: |-
    API for Car Service
  termsOfService: http://swagger.io/terms/
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
tags:
  - name: Car
    description: car to reserve
paths:
  /api/v1/car:
    post:
      tags:
        - Car
      description: Create a new Car
      operationId: createCar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiCar'
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    get:
      tags:
        - Car
      summary: Get all Cars
      description: Get all Cars
      operationId: getCars
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCars'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /api/v1/car/{carId}:
    delete:
      tags:
        - Car
      summary: Remove a Car
      description: Remove a Car by carId
      operationId: removeCar
      parameters:
        - in: path
          name: carId
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Successful operation
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /api/v1/car/search:
    get:
      tags:
        - Car
      summary: Search for Cars
      description: Search for cars based on location, type, and price
      operationId: searchCars
      parameters:
        - in: query
          name: location
          schema:
            type: string
          description: The location to search for
        - in: query
          name: carType
          schema:
            type: string
          description: The type of car to search for
        - in: query
          name: maxPrice
          schema:
            type: number
          description: The maximum price to filter by
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiCars'
        '500':
          description: Internal Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'


components:
  schemas:
    ApiCars:
      type: object
      properties:
        cars:
          type: array
          items:
            $ref: '#/components/schemas/ApiCar'
    ApiCar:
      type: object
      properties:
        carId:
          type: integer
        ownerId:
          type: integer
        location:
          type: string
        price:
          type: number
        carType:
          type: string
        isAvailable:
          type: boolean
    ApiError:
      type: object
      properties:
        code:
          type: string
          description: 'Functional code specifying the error'
          example: '2300'
        message:
          type: string
          description: 'Brief explanation about the error, for more information consult the Car Service team'

    ReserveCarCommand:
      type: object
      properties:
        reservationId:
          type: integer
        day:
          type: string
          format: date
    ReleaseCarCommand:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        day:
          type: string
          format: date
    CarReservedEvent:
      type: object
      properties:
        reservationId:
          type: integer
        day:
          type: string
          format: date
        carAvailable:
          type: boolean
        carId:
          type: integer
    CarReleasedEvent:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        day:
          type: string
          format: date


    ValidateCarCommand:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
    CarValidatedEvent:
      type: object
      properties:
        reservationId:
          type: integer
        carId:
          type: integer
        ownerEmail:
          type: string
        location:
          type: string
        price:
          type: number
        carType:
          type: string
        isAvailable:
          type: boolean